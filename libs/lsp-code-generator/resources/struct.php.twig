
{%  if ctx.documentation or ctx.deprecated or ctx.since %}
/**
{%      apply phpdoc | raw  %}
{%          if ctx.documentation %}
{{              ctx.documentation | description | raw }}
{%          endif %}
{%          if ctx.documentation and (ctx.deprecated or ctx.since) %}

{%          endif %}
{%          if ctx.since %}
{{              ctx.since | tag('since') }}
{%          endif %}
{%          if ctx.deprecated %}
{{              ctx.deprecated | tag('deprecated') }}
{%          endif %}
{%      endapply %}

 */
{%  endif %}
class {{ ctx.name }}{%
    if ctx.extends %}
 extends {%
        for parent in ctx.extends %}
{%          if parent.name != '_InitializeParams' %}
{{              parent.name }}{% if not loop.last %}, {% endif %}
{%          endif %}
{%      endfor %}
{%  endif %}
{%  if ctx.mixins %}
 implements {%
        for interface in ctx.mixins %}

    {{      interface.name }}{% if not loop.last %}, {% endif %}
{%      endfor %}
{%  endif %}

{
{#
    Apply traits list
#}
{%  for trait in ctx.mixins %}
    use {{ trait.name }}Provider;
{%  endfor %}
{#
    Add line delimiter in case of traits has been defined
#}
{%  if ctx.mixins %}

{%  endif %}
{#
    Generate constructor
#}
{%  if ctx.properties or ctx.extends or ctx.mixins %}
    /**
{%  apply phpdoc(1) | raw  %}
{%      for prop in ctx.properties %}
{{          prop.documentation | tag('param', (prop.type | phpdoc_type(prop.optional)) ~ ' $' ~ prop.name) | raw }}
{%          if prop.deprecated %}
       - {{ prop.deprecated | tag('deprecated') }}
{%          endif %}
{%          if prop.since %}
       - {{ prop.since | tag('since') }}
{%          endif %}
{%      endfor %}
{%      for parent in ctx.extends %}
{%          for prop in parent.properties %}
{{              prop.documentation | tag('param', (prop.type | phpdoc_type(prop.optional)) ~ ' $' ~ prop.name) | raw }}
{%              if prop.deprecated %}
       - {{ prop.deprecated | tag('deprecated') }}
{%              endif %}
{%              if prop.since %}
       - {{ prop.since | tag('since') }}
{%              endif %}
{%          endfor %}
{%      endfor %}
{%      for mixin in ctx.mixins %}
{%          for prop in mixin.properties %}
{{              prop.documentation | tag('param', (prop.type | phpdoc_type(prop.optional)) ~ ' $' ~ prop.name) | raw  }}
{%              if prop.deprecated %}
       - {{ prop.deprecated | tag('deprecated') }}
{%              endif %}
{%              if prop.since %}
       - {{ prop.since | tag('since') }}
{%              endif %}
{%          endfor %}
{%      endfor %}
{%  endapply %}

     */
    public function __construct(
{#
        > Constructor default parameters
#}
{%  for prop in ctx.properties %}
        public readonly {{ prop.type | type(prop.optional) }} ${{ prop.name }}{% if prop.optional %} = null{% endif %},
{%  endfor %}
{#
        > Constructor parent parameters
#}
{%  for parent in ctx.extends %}
{%      for prop in parent.properties %}
        {{ prop.type | type(prop.optional) }} ${{ prop.name }}{% if prop.optional %} = null{% endif %},
{%      endfor %}
{%  endfor %}
{#
        > Constructor trait parameters
#}
{%  if ctx.mixins or ctx.extends %}
{%      for mixin in ctx.mixins %}
{%          for prop in mixin.properties %}
        {{ prop.type | type(prop.optional) }} ${{ prop.name }}{% if prop.optional %} = null{% endif %},
{%          endfor %}
{%      endfor %}
    ) {
{#
    > Set trait parameters
#}
{%      for mixin in ctx.mixins %}
{%          for prop in mixin.properties %}
        $this->{{ prop.name }} = ${{ prop.name }};
{%          endfor %}
{%      endfor %}
{%  if ctx.extends and ctx.mixins %}

{%  endif %}
{#
    > Set parent (extends) parameters
#}
{%  if ctx.extends %}
        parent::__construct(
{%      for parent in ctx.extends %}
{%          for prop in parent.properties %}
            ${{ prop.name }},
{%          endfor %}
{%      endfor %}
        );
{%  endif %}
    }
{%  else %}
    ) {}
{%  endif %}
{%  endif %}
}
